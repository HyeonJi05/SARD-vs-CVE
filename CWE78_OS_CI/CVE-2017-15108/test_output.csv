FileName,Caller,Source,Sink,idx,CWE-ID,category,criterion,line,label,slices,tokenized,token_length,predict
after_file-xfers.c,vdagent_file_xfer_task_free,False,False,0,CWE-,CallExpression,syslog,69,-3,"['static void vdagent_file_xfer_task_free(gpointer data)\n', '    AgentFileXferTask *task = data;\n', '    g_return_if_fail(task != NULL);\n', '    if (task->file_fd > 0) {\n', '        syslog(LOG_ERR, ""file-xfer: Removing task %u and file %s due to error"",\n               task->id, task->file_name);\n', '        close(task->file_fd);\n', 'else\n', '    } else if (task->debug)\n', '        syslog(LOG_DEBUG, ""file-xfer: Removing task %u %s"",\n               task->id, task->file_name);\n', '    g_free(task->file_name);\n', '    g_free(task);\n']","static void FUNC1(STRUCT1  Var1)
STRUCT2 *Var2=Var1; 
FUNC2(Var2 != NULL ); 
if (Var2->memberVar1>0){
syslog(Var3,STRING,
Var2->memberVar2,Var2->memberVar3); 
close(Var2->memberVar1); 
else 
}else if (Var2->memberVar4)
syslog(Var4,STRING,
Var2->memberVar2,Var2->memberVar3); 
FUNC3(Var2->memberVar3); 
FUNC3(Var2); 
",138,1
after_file-xfers.c,vdagent_file_xfer_task_free,False,False,1,CWE-,CallExpression,close,71,-3,"['static void vdagent_file_xfer_task_free(gpointer data)\n', '    AgentFileXferTask *task = data;\n', '    g_return_if_fail(task != NULL);\n', '    if (task->file_fd > 0) {\n', '        syslog(LOG_ERR, ""file-xfer: Removing task %u and file %s due to error"",\n               task->id, task->file_name);\n', '        close(task->file_fd);\n', 'else\n', '    } else if (task->debug)\n', '        syslog(LOG_DEBUG, ""file-xfer: Removing task %u %s"",\n               task->id, task->file_name);\n', '    g_free(task->file_name);\n', '    g_free(task);\n']","static void FUNC1(STRUCT1  Var1)
STRUCT2 *Var2=Var1; 
FUNC2(Var2 != NULL ); 
if (Var2->memberVar1>0){
syslog(Var3,STRING,
Var2->memberVar2,Var2->memberVar3); 
close(Var2->memberVar1); 
else 
}else if (Var2->memberVar4)
syslog(Var4,STRING,
Var2->memberVar2,Var2->memberVar3); 
FUNC3(Var2->memberVar3); 
FUNC3(Var2); 
",138,1
after_file-xfers.c,vdagent_file_xfer_task_free,False,False,2,CWE-,CallExpression,unlink,72,-3,"['static void vdagent_file_xfer_task_free(gpointer data)\n', '    AgentFileXferTask *task = data;\n', '    g_return_if_fail(task != NULL);\n', '    if (task->file_fd > 0) {\n', '        syslog(LOG_ERR, ""file-xfer: Removing task %u and file %s due to error"",\n               task->id, task->file_name);\n', '        close(task->file_fd);\n', 'else\n', '    } else if (task->debug)\n', '        syslog(LOG_DEBUG, ""file-xfer: Removing task %u %s"",\n               task->id, task->file_name);\n', '    g_free(task->file_name);\n', '    g_free(task);\n']","static void FUNC1(STRUCT1  Var1)
STRUCT2 *Var2=Var1; 
FUNC2(Var2 != NULL ); 
if (Var2->memberVar1>0){
syslog(Var3,STRING,
Var2->memberVar2,Var2->memberVar3); 
close(Var2->memberVar1); 
else 
}else if (Var2->memberVar4)
syslog(Var4,STRING,
Var2->memberVar2,Var2->memberVar3); 
FUNC3(Var2->memberVar3); 
FUNC3(Var2); 
",138,1
after_file-xfers.c,vdagent_file_xfer_task_free,False,False,3,CWE-,CallExpression,syslog,74,-3,"['static void vdagent_file_xfer_task_free(gpointer data)\n', '    AgentFileXferTask *task = data;\n', '    g_return_if_fail(task != NULL);\n', '    if (task->file_fd > 0) {\n', '        syslog(LOG_ERR, ""file-xfer: Removing task %u and file %s due to error"",\n               task->id, task->file_name);\n', '        close(task->file_fd);\n', 'else\n', '    } else if (task->debug)\n', '        syslog(LOG_DEBUG, ""file-xfer: Removing task %u %s"",\n               task->id, task->file_name);\n', '    g_free(task->file_name);\n', '    g_free(task);\n']","static void FUNC1(STRUCT1  Var1)
STRUCT2 *Var2=Var1; 
FUNC2(Var2 != NULL ); 
if (Var2->memberVar1>0){
syslog(Var3,STRING,
Var2->memberVar2,Var2->memberVar3); 
close(Var2->memberVar1); 
else 
}else if (Var2->memberVar4)
syslog(Var4,STRING,
Var2->memberVar2,Var2->memberVar3); 
FUNC3(Var2->memberVar3); 
FUNC3(Var2); 
",138,1
after_file-xfers.c,vdagent_file_xfers_get_task,False,False,4,CWE-,CallExpression,syslog,116,-3,"['    struct vdagent_file_xfers *xfers, uint32_t id)\n', '    AgentFileXferTask *task;\n', '    task = g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(id));\n', '    if (task == NULL)\n', '        syslog(LOG_ERR, ""file-xfer: error cannot find task %u"", id);\n']","struct STRUCT1 *Var1,uint32_t  Var2)
STRUCT2 *Var3; 
Var3=FUNC1(Var1->memberVar1,FUNC2(Var2)); 
if (Var3 == NULL )
syslog(Var4,STRING,Var2); 
",67,0
after_file-xfers.c,vdagent_parse_start_msg,False,False,5,CWE-,CallExpression,syslog,134,-3,"['    GKeyFile *keyfile = NULL;\n', '    AgentFileXferTask *task = NULL;\n', '    GError *error = NULL;\n', '    if (g_key_file_load_from_data(keyfile,\n                                  (const gchar *)msg->data,\n                                  -1,\n                                  G_KEY_FILE_NONE, &error) == FALSE) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to load keyfile: %s"",\n               error->message);\n', '    if (error) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to parse filename: %s"",\n               error->message);\n', '    if (error) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to parse filesize: %s"",\n               error->message);\n']","STRUCT1 *Var1=NULL ; 
STRUCT2 *Var2=NULL ; 
STRUCT3 *Var3=NULL ; 
if (FUNC1(Var1,
(const STRUCT4 *) Var4->memberVar1,
-1,
Var5,&Var3) ==  Var6){
syslog(Var7,STRING,
Var3->memberVar1); 
if (Var3){
syslog(Var7,STRING,
Var3->memberVar1); 
if (Var3){
syslog(Var7,STRING,
Var3->memberVar1); 
",141,0
after_file-xfers.c,vdagent_parse_start_msg,False,False,6,CWE-,CallExpression,syslog,143,-3,"['    GKeyFile *keyfile = NULL;\n', '    AgentFileXferTask *task = NULL;\n', '    GError *error = NULL;\n', '    if (g_key_file_load_from_data(keyfile,\n                                  (const gchar *)msg->data,\n                                  -1,\n                                  G_KEY_FILE_NONE, &error) == FALSE) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to load keyfile: %s"",\n               error->message);\n', '    if (error) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to parse filename: %s"",\n               error->message);\n', '    if (error) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to parse filesize: %s"",\n               error->message);\n']","STRUCT1 *Var1=NULL ; 
STRUCT2 *Var2=NULL ; 
STRUCT3 *Var3=NULL ; 
if (FUNC1(Var1,
(const STRUCT4 *) Var4->memberVar1,
-1,
Var5,&Var3) ==  Var6){
syslog(Var7,STRING,
Var3->memberVar1); 
if (Var3){
syslog(Var7,STRING,
Var3->memberVar1); 
if (Var3){
syslog(Var7,STRING,
Var3->memberVar1); 
",141,0
after_file-xfers.c,vdagent_parse_start_msg,False,False,7,CWE-,CallExpression,syslog,150,-3,"['    GKeyFile *keyfile = NULL;\n', '    AgentFileXferTask *task = NULL;\n', '    GError *error = NULL;\n', '    if (g_key_file_load_from_data(keyfile,\n                                  (const gchar *)msg->data,\n                                  -1,\n                                  G_KEY_FILE_NONE, &error) == FALSE) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to load keyfile: %s"",\n               error->message);\n', '    if (error) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to parse filename: %s"",\n               error->message);\n', '    if (error) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to parse filesize: %s"",\n               error->message);\n']","STRUCT1 *Var1=NULL ; 
STRUCT2 *Var2=NULL ; 
STRUCT3 *Var3=NULL ; 
if (FUNC1(Var1,
(const STRUCT4 *) Var4->memberVar1,
-1,
Var5,&Var3) ==  Var6){
syslog(Var7,STRING,
Var3->memberVar1); 
if (Var3){
syslog(Var7,STRING,
Var3->memberVar1); 
if (Var3){
syslog(Var7,STRING,
Var3->memberVar1); 
",141,0
after_file-xfers.c,get_free_space_available,False,False,8,CWE-,CallExpression,syslog,176,-3,"['    if (statvfs(path, &stat) != 0) {\n', '        syslog(LOG_WARNING, ""file-xfer: failed to get free space, statvfs error: %s"",\n               strerror(errno));\n']","if (FUNC1(Var1,&Var2) != 0){
syslog(Var3,STRING,
strerror(Var4)); 
",34,0
after_file-xfers.c,get_free_space_available,False,False,9,CWE-,CallExpression,strerror,176,-3,"['    if (statvfs(path, &stat) != 0) {\n', '        syslog(LOG_WARNING, ""file-xfer: failed to get free space, statvfs error: %s"",\n               strerror(errno));\n']","if (FUNC1(Var1,&Var2) != 0){
syslog(Var3,STRING,
strerror(Var4)); 
",34,0
after_file-xfers.c,vdagent_file_xfers_start,False,False,10,CWE-,CallExpression,syslog,195,-3,"['    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '        syslog(LOG_ERR, ""file-xfer: error id %u already exists, ignoring!"",\n               msg->id);\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    if (task->file_size > free_space) {\n', '        udscs_write(xfers->vdagentd,\n                    VDAGENTD_FILE_XFER_STATUS,\n                    msg->id,\n                    VD_AGENT_FILE_XFER_STATUS_NOT_ENOUGH_SPACE,\n                    (uint8_t *)&free_space,\n                    sizeof(free_space));\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '    if (i == 64) {\n', '    if (task->file_fd == -1) {\n', '    if (ftruncate(task->file_fd, task->file_size) < 0) {\n', '    g_hash_table_insert(xfers->xfers, GUINT_TO_POINTER(msg->id), task);\n', '    udscs_write(xfers->vdagentd, VDAGENTD_FILE_XFER_STATUS,\n                msg->id, VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA, NULL, 0);\n', '    udscs_write(xfers->vdagentd, VDAGENTD_FILE_XFER_STATUS,\n                msg->id, VD_AGENT_FILE_XFER_STATUS_ERROR, NULL, 0);\n']","STRUCT1 *Var1)
STRUCT2 *Var2; 
char *Var3=NULL ,*Var4=NULL ,*Var5=NULL ; 
int  Var6; 
uint64_t  Var7; 
if (FUNC1(Var8->memberVar1,FUNC2(Var1->memberVar1))){
syslog(Var9,STRING,
Var1->memberVar1); 
Var2=FUNC3(Var1); 
if (Var2 == NULL ){
if (Var2->memberVar1>Var7){
FUNC4(memberVar1->memberVar2,
Var10,
Var1->memberVar1,
Var11,
(uint8_t *)&Var7,
sizeof (Var7)); 
if (FUNC5(Var3,Var12) == -1){
int  Var13=Var14 != NULL  Var14-Var5 strlen(Var5); 
if (Var6 == 64){
if (Var2->STRUCT3 == -1){
if (FUNC6(Var2->memberVar2,Var2->memberVar1)<0){
FUNC7(memberVar1->memberVar1,FUNC2(Var1->memberVar1),Var2); 
FUNC4(memberVar1->memberVar2,Var10,
Var1->memberVar1,Var15,NULL ,0); 
FUNC4(memberVar1->memberVar2,Var10,
Var1->memberVar1,Var16,NULL ,0); 
",351,0
after_file-xfers.c,vdagent_file_xfers_start,False,False,11,CWE-,CallExpression,syslog,219,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    free_space = get_free_space_available(xfers->save_dir);\n', '    if (task->file_size > free_space) {\n', '        gchar *free_space_str, *file_size_str;\n', '        free_space_str = g_format_size(free_space);\n', '        file_size_str = g_format_size(task->file_size);\n', '        syslog(LOG_ERR, ""file-xfer: not enough free space (%s to copy, %s free)"",\n               file_size_str, free_space_str);\n', '        g_free(free_space_str);\n', '        g_free(file_size_str);\n', '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
uint64_t  Var7; 
if (FUNC2(Var1->memberVar1,FUNC3(Var2->memberVar1))){
Var3=FUNC4(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var7=FUNC5(memberVar1->memberVar3); 
if (Var3->memberVar2>Var7){
STRUCT4 *Var8,*Var9; 
Var8=FUNC6(Var7); 
Var9=FUNC6(Var3->memberVar2); 
syslog(Var10,STRING,
Var9,Var8); 
FUNC7(Var8); 
FUNC7(Var9); 
int  Var11=Var12 != NULL  Var12-Var6 strlen(Var6); 
",252,1
after_file-xfers.c,vdagent_file_xfers_start,False,False,12,CWE-,CallExpression,syslog,238,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    file_path = g_build_filename(xfers->save_dir, task->file_name, NULL);\n', '    if (task->file_size > free_space) {\n', '        g_free(dir);\n', '    dir = g_path_get_dirname(file_path);\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '        syslog(LOG_ERR, ""file-xfer: Failed to create dir %s"", dir);\n', ""        char *extension = strrchr(file_path, '.');\n"", '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '    if (i == 64) {\n', '    if (task->file_fd == -1) {\n', '    if (ftruncate(task->file_fd, task->file_size) < 0) {\n', '    g_free(dir);\n', '    g_free(dir);\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
int  Var7; 
uint64_t  Var8; 
if (FUNC2(Var1->memberVar1,FUNC3(Var2->memberVar1))){
Var3=FUNC4(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var6=FUNC5(memberVar1->memberVar3,Var3->memberVar2,NULL ); 
if (Var3->memberVar3>Var8){
FUNC6(Var4); 
Var4=FUNC7(Var6); 
if (FUNC8(Var4,Var9) == -1){
syslog(Var10,STRING,Var4); 
char *Var11=strrchr(Var6,.); 
int  Var12=Var11 != NULL  Var11-Var6 strlen(Var6); 
if (Var7 == 64){
if (Var3->STRUCT4 == -1){
if (FUNC9(Var3->memberVar4,Var3->memberVar3)<0){
FUNC6(Var4); 
FUNC6(Var4); 
",330,0
after_file-xfers.c,vdagent_file_xfers_start,False,False,13,CWE-,CallExpression,strrchr,245,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    file_path = g_build_filename(xfers->save_dir, task->file_name, NULL);\n', '    if (task->file_size > free_space) {\n', '        g_free(file_path);\n', '    dir = g_path_get_dirname(file_path);\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '    path = g_strdup(file_path);\n', '    for (i = 0; i < 64 && (stat(path, &st) == 0 || errno != ENOENT); i++) {\n', '        g_free(path);\n', ""        char *extension = strrchr(file_path, '.');\n"", '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '        path = g_strdup_printf(""%.*s (%i)%s"", basename_len, file_path,\n                               i + 1, extension ? extension : """");\n', '    task->file_name = path;\n', '    if (i == 64) {\n', '        syslog(LOG_ERR, ""file-xfer: more than 63 copies of %s exist?"",\n               file_path);\n', '    task->file_fd = open(path, O_CREAT | O_WRONLY, 0644);\n', '    if (task->file_fd == -1) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to create file %s: %s"",\n               path, strerror(errno));\n', '    if (ftruncate(task->file_fd, task->file_size) < 0) {\n', '    g_free(file_path);\n', '    g_free(file_path);\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
int  Var7; 
uint64_t  Var8; 
if (FUNC2(Var1->memberVar1,FUNC3(Var2->memberVar1))){
Var3=FUNC4(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var6=FUNC5(memberVar1->memberVar3,Var3->memberVar2,NULL ); 
if (Var3->memberVar3>Var8){
FUNC6(Var6); 
Var4=FUNC7(Var6); 
if (FUNC8(Var4,Var9) == -1){
Var5=FUNC9(Var6); 
for (Var7=0; Var7<64&&(FUNC10(Var5,&Var10) == 0||Var11 !=  Var12); Var7  Var13){
FUNC6(Var5); 
char *Var14=strrchr(Var6,.); 
int  Var15=Var14 != NULL  Var14-Var6 strlen(Var6); 
Var5=FUNC11(STRING,Var15,Var6,
Var7+1,Var14  Var14 STRING); 
Var3->memberVar2=Var5; 
if (Var7 == 64){
syslog(Var16,STRING,
Var6); 
Var3->memberVar4=open(Var5,Var17|Var18,0644); 
if (Var3->memberVar4 == -1){
syslog(Var16,STRING,
Var5,strerror(Var11)); 
if (FUNC12(Var3->memberVar4,Var3->memberVar3)<0){
FUNC6(Var6); 
FUNC6(Var6); 
",480,0
after_file-xfers.c,vdagent_file_xfers_start,False,False,14,CWE-,CallExpression,strlen,246,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    g_return_if_fail(xfers != NULL);\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    file_path = g_build_filename(xfers->save_dir, task->file_name, NULL);\n', '    if (task->file_size > free_space) {\n', '        g_free(file_path);\n', '    dir = g_path_get_dirname(file_path);\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '    path = g_strdup(file_path);\n', '    for (i = 0; i < 64 && (stat(path, &st) == 0 || errno != ENOENT); i++) {\n', '        g_free(path);\n', ""        char *extension = strrchr(file_path, '.');\n"", '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '        path = g_strdup_printf(""%.*s (%i)%s"", basename_len, file_path,\n                               i + 1, extension ? extension : """");\n', '    task->file_name = path;\n', '    if (i == 64) {\n', '        syslog(LOG_ERR, ""file-xfer: more than 63 copies of %s exist?"",\n               file_path);\n', '    task->file_fd = open(path, O_CREAT | O_WRONLY, 0644);\n', '    if (task->file_fd == -1) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to create file %s: %s"",\n               path, strerror(errno));\n', '    if (ftruncate(task->file_fd, task->file_size) < 0) {\n', '    udscs_write(xfers->vdagentd, VDAGENTD_FILE_XFER_STATUS,\n                msg->id, VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA, NULL, 0);\n', '    g_free(file_path);\n', '    udscs_write(xfers->vdagentd, VDAGENTD_FILE_XFER_STATUS,\n                msg->id, VD_AGENT_FILE_XFER_STATUS_ERROR, NULL, 0);\n', '    g_free(file_path);\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
int  Var7; 
uint64_t  Var8; 
FUNC2(Var1 != NULL ); 
if (FUNC3(Var1->memberVar1,FUNC4(Var2->memberVar1))){
Var3=FUNC5(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var6=FUNC6(memberVar1->memberVar3,Var3->memberVar2,NULL ); 
if (Var3->memberVar3>Var8){
FUNC7(Var6); 
Var4=FUNC8(Var6); 
if (FUNC9(Var4,Var9) == -1){
Var5=FUNC10(Var6); 
for (Var7=0; Var7<64&&(FUNC11(Var5,&Var10) == 0||Var11 !=  Var12); Var7  Var13){
FUNC7(Var5); 
char *Var14=strrchr(Var6,.); 
int  Var15=Var14 != NULL  Var14-Var6 strlen(Var6); 
Var5=FUNC12(STRING,Var15,Var6,
Var7+1,Var14  Var14 STRING); 
Var3->memberVar2=Var5; 
if (Var7 == 64){
syslog(Var16,STRING,
Var6); 
Var3->memberVar4=open(Var5,Var17|Var18,0644); 
if (Var3->memberVar4 == -1){
syslog(Var16,STRING,
Var5,strerror(Var11)); 
if (FUNC13(Var3->memberVar4,Var3->memberVar3)<0){
FUNC14(memberVar1->memberVar4,Var19,
Var2->memberVar1,Var20,NULL ,0); 
FUNC7(Var6); 
FUNC14(memberVar1->memberVar4,Var19,
Var2->memberVar1,Var21,NULL ,0); 
FUNC7(Var6); 
",551,0
after_file-xfers.c,vdagent_file_xfers_start,False,False,15,CWE-,CallExpression,syslog,253,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    file_path = g_build_filename(xfers->save_dir, task->file_name, NULL);\n', '    if (task->file_size > free_space) {\n', '        g_free(file_path);\n', '    dir = g_path_get_dirname(file_path);\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '    path = g_strdup(file_path);\n', '    for (i = 0; i < 64 && (stat(path, &st) == 0 || errno != ENOENT); i++) {\n', ""        char *extension = strrchr(file_path, '.');\n"", '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '        path = g_strdup_printf(""%.*s (%i)%s"", basename_len, file_path,\n                               i + 1, extension ? extension : """");\n', '    if (i == 64) {\n', '        syslog(LOG_ERR, ""file-xfer: more than 63 copies of %s exist?"",\n               file_path);\n', '    if (task->file_fd == -1) {\n', '    if (ftruncate(task->file_fd, task->file_size) < 0) {\n', '    g_free(file_path);\n', '    g_free(file_path);\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
int  Var7; 
uint64_t  Var8; 
if (FUNC2(Var1->memberVar1,FUNC3(Var2->memberVar1))){
Var3=FUNC4(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var6=FUNC5(memberVar1->memberVar3,Var3->memberVar2,NULL ); 
if (Var3->memberVar3>Var8){
FUNC6(Var6); 
Var4=FUNC7(Var6); 
if (FUNC8(Var4,Var9) == -1){
Var5=FUNC9(Var6); 
for (Var7=0; Var7<64&&(FUNC10(Var5,&Var10) == 0||Var11 !=  Var12); Var7  Var13){
char *Var14=strrchr(Var6,.); 
int  Var15=Var14 != NULL  Var14-Var6 strlen(Var6); 
Var5=FUNC11(STRING,Var15,Var6,
Var7+1,Var14  Var14 STRING); 
if (Var7 == 64){
syslog(Var16,STRING,
Var6); 
if (Var3->STRUCT4 == -1){
if (FUNC12(Var3->memberVar4,Var3->memberVar3)<0){
FUNC6(Var6); 
FUNC6(Var6); 
",421,0
after_file-xfers.c,vdagent_file_xfers_start,False,False,16,CWE-,CallExpression,open,258,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    file_path = g_build_filename(xfers->save_dir, task->file_name, NULL);\n', '    if (task->file_size > free_space) {\n', '        gchar *free_space_str, *file_size_str;\n', '        file_size_str = g_format_size(task->file_size);\n', '        vdagent_file_xfer_task_free(task);\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '    path = g_strdup(file_path);\n', '    for (i = 0; i < 64 && (stat(path, &st) == 0 || errno != ENOENT); i++) {\n', '        g_free(path);\n', ""        char *extension = strrchr(file_path, '.');\n"", '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '        path = g_strdup_printf(""%.*s (%i)%s"", basename_len, file_path,\n                               i + 1, extension ? extension : """");\n', '    g_free(task->file_name);\n', '    task->file_name = path;\n', '    if (i == 64) {\n', '    task->file_fd = open(path, O_CREAT | O_WRONLY, 0644);\n', '    if (task->file_fd == -1) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to create file %s: %s"",\n               path, strerror(errno));\n', '    if (ftruncate(task->file_fd, task->file_size) < 0) {\n', '    g_hash_table_insert(xfers->xfers, GUINT_TO_POINTER(msg->id), task);\n', '    if (task)\n', '        vdagent_file_xfer_task_free(task);\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
int  Var7; 
uint64_t  Var8; 
if (FUNC2(Var1->memberVar1,FUNC3(Var2->memberVar1))){
Var3=FUNC4(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var6=FUNC5(memberVar1->memberVar3,Var3->memberVar2,NULL ); 
if (Var3->memberVar3>Var8){
STRUCT4 *Var9,*Var10; 
Var10=FUNC6(Var3->memberVar3); 
FUNC7(Var3); 
if (FUNC8(Var4,Var11) == -1){
Var5=FUNC9(Var6); 
for (Var7=0; Var7<64&&(FUNC10(Var5,&Var12) == 0||Var13 !=  Var14); Var7  Var15){
FUNC11(Var5); 
char *Var16=strrchr(Var6,.); 
int  Var17=Var16 != NULL  Var16-Var6 strlen(Var6); 
Var5=FUNC12(STRING,Var17,Var6,
Var7+1,Var16  Var16 STRING); 
FUNC11(Var3->memberVar2); 
Var3->memberVar2=Var5; 
if (Var7 == 64){
Var3->memberVar4=open(Var5,Var18|Var19,0644); 
if (Var3->memberVar4 == -1){
syslog(Var20,STRING,
Var5,strerror(Var13)); 
if (FUNC13(Var3->memberVar4,Var3->memberVar3)<0){
FUNC14(memberVar1->memberVar1,FUNC3(Var2->memberVar1),Var3); 
if (Var3)
FUNC7(Var3); 
",516,0
after_file-xfers.c,vdagent_file_xfers_start,False,False,17,CWE-,CallExpression,syslog,260,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    file_path = g_build_filename(xfers->save_dir, task->file_name, NULL);\n', '    if (task->file_size > free_space) {\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '    path = g_strdup(file_path);\n', '    for (i = 0; i < 64 && (stat(path, &st) == 0 || errno != ENOENT); i++) {\n', '        g_free(path);\n', ""        char *extension = strrchr(file_path, '.');\n"", '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '        path = g_strdup_printf(""%.*s (%i)%s"", basename_len, file_path,\n                               i + 1, extension ? extension : """");\n', '    task->file_name = path;\n', '    if (i == 64) {\n', '    task->file_fd = open(path, O_CREAT | O_WRONLY, 0644);\n', '    if (task->file_fd == -1) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to create file %s: %s"",\n               path, strerror(errno));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
int  Var7; 
uint64_t  Var8; 
if (FUNC2(Var1->memberVar1,FUNC3(Var2->memberVar1))){
Var3=FUNC4(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var6=FUNC5(memberVar1->memberVar3,Var3->memberVar2,NULL ); 
if (Var3->memberVar3>Var8){
if (FUNC6(Var4,Var9) == -1){
Var5=FUNC7(Var6); 
for (Var7=0; Var7<64&&(FUNC8(Var5,&Var10) == 0||Var11 !=  Var12); Var7  Var13){
FUNC9(Var5); 
char *Var14=strrchr(Var6,.); 
int  Var15=Var14 != NULL  Var14-Var6 strlen(Var6); 
Var5=FUNC10(STRING,Var15,Var6,
Var7+1,Var14  Var14 STRING); 
Var3->memberVar2=Var5; 
if (Var7 == 64){
Var3->memberVar4=open(Var5,Var16|Var17,0644); 
if (Var3->memberVar4 == -1){
syslog(Var18,STRING,
Var5,strerror(Var11)); 
",409,0
after_file-xfers.c,vdagent_file_xfers_start,False,False,18,CWE-,CallExpression,strerror,260,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    file_path = g_build_filename(xfers->save_dir, task->file_name, NULL);\n', '    if (task->file_size > free_space) {\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '    path = g_strdup(file_path);\n', '    for (i = 0; i < 64 && (stat(path, &st) == 0 || errno != ENOENT); i++) {\n', '        g_free(path);\n', ""        char *extension = strrchr(file_path, '.');\n"", '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '        path = g_strdup_printf(""%.*s (%i)%s"", basename_len, file_path,\n                               i + 1, extension ? extension : """");\n', '    task->file_name = path;\n', '    if (i == 64) {\n', '    task->file_fd = open(path, O_CREAT | O_WRONLY, 0644);\n', '    if (task->file_fd == -1) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to create file %s: %s"",\n               path, strerror(errno));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
int  Var7; 
uint64_t  Var8; 
if (FUNC2(Var1->memberVar1,FUNC3(Var2->memberVar1))){
Var3=FUNC4(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var6=FUNC5(memberVar1->memberVar3,Var3->memberVar2,NULL ); 
if (Var3->memberVar3>Var8){
if (FUNC6(Var4,Var9) == -1){
Var5=FUNC7(Var6); 
for (Var7=0; Var7<64&&(FUNC8(Var5,&Var10) == 0||Var11 !=  Var12); Var7  Var13){
FUNC9(Var5); 
char *Var14=strrchr(Var6,.); 
int  Var15=Var14 != NULL  Var14-Var6 strlen(Var6); 
Var5=FUNC10(STRING,Var15,Var6,
Var7+1,Var14  Var14 STRING); 
Var3->memberVar2=Var5; 
if (Var7 == 64){
Var3->memberVar4=open(Var5,Var16|Var17,0644); 
if (Var3->memberVar4 == -1){
syslog(Var18,STRING,
Var5,strerror(Var11)); 
",409,0
after_file-xfers.c,vdagent_file_xfers_status,False,False,19,CWE-,CallExpression,syslog,305,-3,"['void vdagent_file_xfers_status(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStatusMessage *msg)\n', '    VDAgentFileXferStatusMessage *msg)\n', '    AgentFileXferTask *task;\n', '    task = vdagent_file_xfers_get_task(xfers, msg->id);\n', '    if (!task)\n', '    switch (msg->result) {\n', '        syslog(LOG_ERR, ""file-xfer: task %u %s received unexpected 0 response"",\n               task->id, task->file_name);\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
Var3=FUNC2(Var1,Var2->memberVar1); 
if (!Var3)
switch (Var2->memberVar2){
syslog(Var4,STRING,
Var3->memberVar1,Var3->memberVar2); 
",96,1
after_file-xfers.c,vdagent_file_xfers_data,False,False,20,CWE-,CallExpression,write,326,-3,"['void vdagent_file_xfers_data(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferDataMessage *msg)\n', '    VDAgentFileXferDataMessage *msg)\n', '    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    task = vdagent_file_xfers_get_task(xfers, msg->id);\n', '    if (!task)\n', '    len = write(task->file_fd, msg->data, msg->size);\n', '    if (len == msg->size) {\n', '        task->read_bytes += msg->size;\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', '                if (xfers->debug)\n', '                    syslog(LOG_DEBUG, ""file-xfer: task %u %s has completed"",\n                           task->id, task->file_name);\n', '                close(task->file_fd);\n', '                task->file_fd = -1;\n', '                if (xfers->open_save_dir &&\n                        task->file_xfer_nr == task->file_xfer_total &&\n                        g_hash_table_size(xfers->xfers) == 1) {\n', '                    GError *error = NULL;\n', '                    gchar *argv[] = { ""xdg-open"", xfers->save_dir, NULL };\n', 'else\n', '        syslog(LOG_ERR, ""file-xfer: error writing %s: %s"", task->file_name,\n               strerror(errno));\n', '    if (status != -1) {\n', '        udscs_write(xfers->vdagentd, VDAGENTD_FILE_XFER_STATUS,\n                    msg->id, status, NULL, 0);\n', '        g_hash_table_remove(xfers->xfers, GUINT_TO_POINTER(msg->id));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
int  Var4,Var5=-1; 
Var3=FUNC2(Var1,Var2->memberVar1); 
if (!Var3)
Var4=write(Var3->memberVar1,Var2->memberVar2,Var2->size ); 
if (Var4 ==  Var2->size ){
Var3->memberVar2  STRUCT4  Var2->size ; 
if (Var3->memberVar2 >=  Var3->memberVar3){
if (Var3->memberVar2 ==  Var3->memberVar3){
if (Var1->memberVar1)
syslog(Var6,STRING,
Var3->memberVar4,Var3->memberVar5); 
close(Var3->memberVar1); 
Var3->memberVar1=-1; 
if (Var1->memberVar2&&
Var3->memberVar6 ==  Var3->memberVar7&&
FUNC3(Var1->memberVar3) == 1){
STRUCT5 *Var7=NULL ; 
STRUCT6 *Var8[]={STRING,memberVar3->memberVar4,NULL }; 
else 
syslog(Var9,STRING,Var3->memberVar5,
strerror(Var10)); 
if (Var5 != -1){
FUNC4(memberVar3->memberVar5,Var11,
Var2->memberVar1,Var5,NULL ,0); 
FUNC5(memberVar3->memberVar3,FUNC6(Var2->memberVar1)); 
",385,0
after_file-xfers.c,vdagent_file_xfers_data,False,False,21,CWE-,CallExpression,syslog,332,-3,"['void vdagent_file_xfers_data(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferDataMessage *msg)\n', '    VDAgentFileXferDataMessage *msg)\n', '    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    task = vdagent_file_xfers_get_task(xfers, msg->id);\n', '    if (!task)\n', '    len = write(task->file_fd, msg->data, msg->size);\n', '    if (len == msg->size) {\n', '        task->read_bytes += msg->size;\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', '                if (xfers->debug)\n', '                    syslog(LOG_DEBUG, ""file-xfer: task %u %s has completed"",\n                           task->id, task->file_name);\n', '                close(task->file_fd);\n', '                task->file_fd = -1;\n', '                if (xfers->open_save_dir &&\n                        task->file_xfer_nr == task->file_xfer_total &&\n                        g_hash_table_size(xfers->xfers) == 1) {\n', '                    gchar *argv[] = { ""xdg-open"", xfers->save_dir, NULL };\n', 'else\n', '        syslog(LOG_ERR, ""file-xfer: error writing %s: %s"", task->file_name,\n               strerror(errno));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
int  Var4,Var5=-1; 
Var3=FUNC2(Var1,Var2->memberVar1); 
if (!Var3)
Var4=write(Var3->memberVar1,Var2->memberVar2,Var2->size ); 
if (Var4 ==  Var2->size ){
Var3->memberVar2  STRUCT4  Var2->size ; 
if (Var3->memberVar2 >=  Var3->memberVar3){
if (Var3->memberVar2 ==  Var3->memberVar3){
if (Var1->memberVar1)
syslog(Var6,STRING,
Var3->memberVar4,Var3->memberVar5); 
close(Var3->memberVar1); 
Var3->memberVar1=-1; 
if (Var1->memberVar2&&
Var3->memberVar6 ==  Var3->memberVar7&&
FUNC3(Var1->memberVar3) == 1){
STRUCT5 *Var7[]={STRING,memberVar3->memberVar4,NULL }; 
else 
syslog(Var8,STRING,Var3->memberVar5,
strerror(Var9)); 
",311,0
after_file-xfers.c,vdagent_file_xfers_data,False,False,22,CWE-,CallExpression,close,334,-3,"['void vdagent_file_xfers_data(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferDataMessage *msg)\n', '    VDAgentFileXferDataMessage *msg)\n', '    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    task = vdagent_file_xfers_get_task(xfers, msg->id);\n', '    if (!task)\n', '    len = write(task->file_fd, msg->data, msg->size);\n', '    if (len == msg->size) {\n', '        task->read_bytes += msg->size;\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', '                if (xfers->debug)\n', '                    syslog(LOG_DEBUG, ""file-xfer: task %u %s has completed"",\n                           task->id, task->file_name);\n', '                close(task->file_fd);\n', '                task->file_fd = -1;\n', '                if (xfers->open_save_dir &&\n                        task->file_xfer_nr == task->file_xfer_total &&\n                        g_hash_table_size(xfers->xfers) == 1) {\n', '                    gchar *argv[] = { ""xdg-open"", xfers->save_dir, NULL };\n', 'else\n', '        syslog(LOG_ERR, ""file-xfer: error writing %s: %s"", task->file_name,\n               strerror(errno));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
int  Var4,Var5=-1; 
Var3=FUNC2(Var1,Var2->memberVar1); 
if (!Var3)
Var4=write(Var3->memberVar1,Var2->memberVar2,Var2->size ); 
if (Var4 ==  Var2->size ){
Var3->memberVar2  STRUCT4  Var2->size ; 
if (Var3->memberVar2 >=  Var3->memberVar3){
if (Var3->memberVar2 ==  Var3->memberVar3){
if (Var1->memberVar1)
syslog(Var6,STRING,
Var3->memberVar4,Var3->memberVar5); 
close(Var3->memberVar1); 
Var3->memberVar1=-1; 
if (Var1->memberVar2&&
Var3->memberVar6 ==  Var3->memberVar7&&
FUNC3(Var1->memberVar3) == 1){
STRUCT5 *Var7[]={STRING,memberVar3->memberVar4,NULL }; 
else 
syslog(Var8,STRING,Var3->memberVar5,
strerror(Var9)); 
",311,0
after_file-xfers.c,vdagent_file_xfers_data,False,False,23,CWE-,CallExpression,syslog,344,-3,"['    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    if (!task)\n', '    if (len == msg->size) {\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', '                if (xfers->open_save_dir &&\n                        task->file_xfer_nr == task->file_xfer_total &&\n                        g_hash_table_size(xfers->xfers) == 1) {\n', '                    GError *error = NULL;\n', '                    gchar *argv[] = { ""xdg-open"", xfers->save_dir, NULL };\n', '                    if (!g_spawn_async(NULL, argv, NULL,\n                                           G_SPAWN_SEARCH_PATH,\n                                           NULL, NULL, NULL, &error)) {\n', '                        syslog(LOG_WARNING,\n                               ""file-xfer: failed to open save directory: %s"",\n                               error->message);\n', '                        g_error_free(error);\n']","STRUCT1 *Var1; 
int  Var2,Var3=-1; 
if (!Var1)
if (Var2 ==  Var4->size ){
if (Var1->memberVar1 >=  Var1->memberVar2){
if (Var1->memberVar1 ==  Var1->memberVar2){
if (Var5->memberVar1&&
Var1->memberVar3 ==  Var1->memberVar4&&
FUNC1(Var5->memberVar2) == 1){
STRUCT2 *Var6=NULL ; 
STRUCT3 *Var7[]={STRING,memberVar2->memberVar3,NULL }; 
if (!FUNC2(NULL ,Var7,NULL ,
Var8,
NULL ,NULL ,NULL ,&Var6)){
syslog(Var9,
STRING,
Var6->memberVar1); 
FUNC3(Var6); 
",219,0
after_file-xfers.c,vdagent_file_xfers_data,False,False,24,CWE-,CallExpression,syslog,352,-3,"['    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    if (!task)\n', '    if (len == msg->size) {\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', 'else\n', '                syslog(LOG_ERR, ""file-xfer: error received too much data"");\n']","STRUCT1 *Var1; 
int  Var2,Var3=-1; 
if (!Var1)
if (Var2 ==  Var4->size ){
if (Var1->memberVar1 >=  Var1->memberVar2){
if (Var1->memberVar1 ==  Var1->memberVar2){
else 
syslog(Var5,STRING); 
",92,0
after_file-xfers.c,vdagent_file_xfers_data,False,False,25,CWE-,CallExpression,syslog,357,-3,"['void vdagent_file_xfers_data(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferDataMessage *msg)\n', '    VDAgentFileXferDataMessage *msg)\n', '    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    task = vdagent_file_xfers_get_task(xfers, msg->id);\n', '    if (!task)\n', '    len = write(task->file_fd, msg->data, msg->size);\n', '    if (len == msg->size) {\n', '        task->read_bytes += msg->size;\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', '                if (xfers->debug)\n', '                    syslog(LOG_DEBUG, ""file-xfer: task %u %s has completed"",\n                           task->id, task->file_name);\n', '                close(task->file_fd);\n', '                task->file_fd = -1;\n', '                if (xfers->open_save_dir &&\n                        task->file_xfer_nr == task->file_xfer_total &&\n                        g_hash_table_size(xfers->xfers) == 1) {\n', '                    gchar *argv[] = { ""xdg-open"", xfers->save_dir, NULL };\n', 'else\n', '        syslog(LOG_ERR, ""file-xfer: error writing %s: %s"", task->file_name,\n               strerror(errno));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
int  Var4,Var5=-1; 
Var3=FUNC2(Var1,Var2->memberVar1); 
if (!Var3)
Var4=write(Var3->memberVar1,Var2->memberVar2,Var2->size ); 
if (Var4 ==  Var2->size ){
Var3->memberVar2  STRUCT4  Var2->size ; 
if (Var3->memberVar2 >=  Var3->memberVar3){
if (Var3->memberVar2 ==  Var3->memberVar3){
if (Var1->memberVar1)
syslog(Var6,STRING,
Var3->memberVar4,Var3->memberVar5); 
close(Var3->memberVar1); 
Var3->memberVar1=-1; 
if (Var1->memberVar2&&
Var3->memberVar6 ==  Var3->memberVar7&&
FUNC3(Var1->memberVar3) == 1){
STRUCT5 *Var7[]={STRING,memberVar3->memberVar4,NULL }; 
else 
syslog(Var8,STRING,Var3->memberVar5,
strerror(Var9)); 
",311,0
after_file-xfers.c,vdagent_file_xfers_data,False,False,26,CWE-,CallExpression,strerror,357,-3,"['void vdagent_file_xfers_data(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferDataMessage *msg)\n', '    VDAgentFileXferDataMessage *msg)\n', '    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    task = vdagent_file_xfers_get_task(xfers, msg->id);\n', '    if (!task)\n', '    len = write(task->file_fd, msg->data, msg->size);\n', '    if (len == msg->size) {\n', '        task->read_bytes += msg->size;\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', '                if (xfers->debug)\n', '                    syslog(LOG_DEBUG, ""file-xfer: task %u %s has completed"",\n                           task->id, task->file_name);\n', '                close(task->file_fd);\n', '                task->file_fd = -1;\n', '                if (xfers->open_save_dir &&\n                        task->file_xfer_nr == task->file_xfer_total &&\n                        g_hash_table_size(xfers->xfers) == 1) {\n', '                    gchar *argv[] = { ""xdg-open"", xfers->save_dir, NULL };\n', 'else\n', '        syslog(LOG_ERR, ""file-xfer: error writing %s: %s"", task->file_name,\n               strerror(errno));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
int  Var4,Var5=-1; 
Var3=FUNC2(Var1,Var2->memberVar1); 
if (!Var3)
Var4=write(Var3->memberVar1,Var2->memberVar2,Var2->size ); 
if (Var4 ==  Var2->size ){
Var3->memberVar2  STRUCT4  Var2->size ; 
if (Var3->memberVar2 >=  Var3->memberVar3){
if (Var3->memberVar2 ==  Var3->memberVar3){
if (Var1->memberVar1)
syslog(Var6,STRING,
Var3->memberVar4,Var3->memberVar5); 
close(Var3->memberVar1); 
Var3->memberVar1=-1; 
if (Var1->memberVar2&&
Var3->memberVar6 ==  Var3->memberVar7&&
FUNC3(Var1->memberVar3) == 1){
STRUCT5 *Var7[]={STRING,memberVar3->memberVar4,NULL }; 
else 
syslog(Var8,STRING,Var3->memberVar5,
strerror(Var9)); 
",311,0
before_file-xfers.c,vdagent_file_xfer_task_free,False,False,27,CWE-,CallExpression,syslog,69,-3,"['static void vdagent_file_xfer_task_free(gpointer data)\n', '    AgentFileXferTask *task = data;\n', '    g_return_if_fail(task != NULL);\n', '    if (task->file_fd > 0) {\n', '        syslog(LOG_ERR, ""file-xfer: Removing task %u and file %s due to error"",\n               task->id, task->file_name);\n', '        close(task->file_fd);\n', 'else\n', '    } else if (task->debug)\n', '        syslog(LOG_DEBUG, ""file-xfer: Removing task %u %s"",\n               task->id, task->file_name);\n', '    g_free(task->file_name);\n', '    g_free(task);\n']","static void FUNC1(STRUCT1  Var1)
STRUCT2 *Var2=Var1; 
FUNC2(Var2 != NULL ); 
if (Var2->memberVar1>0){
syslog(Var3,STRING,
Var2->memberVar2,Var2->memberVar3); 
close(Var2->memberVar1); 
else 
}else if (Var2->memberVar4)
syslog(Var4,STRING,
Var2->memberVar2,Var2->memberVar3); 
FUNC3(Var2->memberVar3); 
FUNC3(Var2); 
",138,1
before_file-xfers.c,vdagent_file_xfer_task_free,False,False,28,CWE-,CallExpression,close,71,-3,"['static void vdagent_file_xfer_task_free(gpointer data)\n', '    AgentFileXferTask *task = data;\n', '    g_return_if_fail(task != NULL);\n', '    if (task->file_fd > 0) {\n', '        syslog(LOG_ERR, ""file-xfer: Removing task %u and file %s due to error"",\n               task->id, task->file_name);\n', '        close(task->file_fd);\n', 'else\n', '    } else if (task->debug)\n', '        syslog(LOG_DEBUG, ""file-xfer: Removing task %u %s"",\n               task->id, task->file_name);\n', '    g_free(task->file_name);\n', '    g_free(task);\n']","static void FUNC1(STRUCT1  Var1)
STRUCT2 *Var2=Var1; 
FUNC2(Var2 != NULL ); 
if (Var2->memberVar1>0){
syslog(Var3,STRING,
Var2->memberVar2,Var2->memberVar3); 
close(Var2->memberVar1); 
else 
}else if (Var2->memberVar4)
syslog(Var4,STRING,
Var2->memberVar2,Var2->memberVar3); 
FUNC3(Var2->memberVar3); 
FUNC3(Var2); 
",138,1
before_file-xfers.c,vdagent_file_xfer_task_free,False,False,29,CWE-,CallExpression,unlink,72,-3,"['static void vdagent_file_xfer_task_free(gpointer data)\n', '    AgentFileXferTask *task = data;\n', '    g_return_if_fail(task != NULL);\n', '    if (task->file_fd > 0) {\n', '        syslog(LOG_ERR, ""file-xfer: Removing task %u and file %s due to error"",\n               task->id, task->file_name);\n', '        close(task->file_fd);\n', 'else\n', '    } else if (task->debug)\n', '        syslog(LOG_DEBUG, ""file-xfer: Removing task %u %s"",\n               task->id, task->file_name);\n', '    g_free(task->file_name);\n', '    g_free(task);\n']","static void FUNC1(STRUCT1  Var1)
STRUCT2 *Var2=Var1; 
FUNC2(Var2 != NULL ); 
if (Var2->memberVar1>0){
syslog(Var3,STRING,
Var2->memberVar2,Var2->memberVar3); 
close(Var2->memberVar1); 
else 
}else if (Var2->memberVar4)
syslog(Var4,STRING,
Var2->memberVar2,Var2->memberVar3); 
FUNC3(Var2->memberVar3); 
FUNC3(Var2); 
",138,1
before_file-xfers.c,vdagent_file_xfer_task_free,False,False,30,CWE-,CallExpression,syslog,74,-3,"['static void vdagent_file_xfer_task_free(gpointer data)\n', '    AgentFileXferTask *task = data;\n', '    g_return_if_fail(task != NULL);\n', '    if (task->file_fd > 0) {\n', '        syslog(LOG_ERR, ""file-xfer: Removing task %u and file %s due to error"",\n               task->id, task->file_name);\n', '        close(task->file_fd);\n', 'else\n', '    } else if (task->debug)\n', '        syslog(LOG_DEBUG, ""file-xfer: Removing task %u %s"",\n               task->id, task->file_name);\n', '    g_free(task->file_name);\n', '    g_free(task);\n']","static void FUNC1(STRUCT1  Var1)
STRUCT2 *Var2=Var1; 
FUNC2(Var2 != NULL ); 
if (Var2->memberVar1>0){
syslog(Var3,STRING,
Var2->memberVar2,Var2->memberVar3); 
close(Var2->memberVar1); 
else 
}else if (Var2->memberVar4)
syslog(Var4,STRING,
Var2->memberVar2,Var2->memberVar3); 
FUNC3(Var2->memberVar3); 
FUNC3(Var2); 
",138,1
before_file-xfers.c,vdagent_file_xfers_get_task,False,False,31,CWE-,CallExpression,syslog,116,-3,"['    struct vdagent_file_xfers *xfers, uint32_t id)\n', '    AgentFileXferTask *task;\n', '    task = g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(id));\n', '    if (task == NULL)\n', '        syslog(LOG_ERR, ""file-xfer: error cannot find task %u"", id);\n']","struct STRUCT1 *Var1,uint32_t  Var2)
STRUCT2 *Var3; 
Var3=FUNC1(Var1->memberVar1,FUNC2(Var2)); 
if (Var3 == NULL )
syslog(Var4,STRING,Var2); 
",67,0
before_file-xfers.c,vdagent_parse_start_msg,False,False,32,CWE-,CallExpression,syslog,134,-3,"['    GKeyFile *keyfile = NULL;\n', '    AgentFileXferTask *task = NULL;\n', '    GError *error = NULL;\n', '    if (g_key_file_load_from_data(keyfile,\n                                  (const gchar *)msg->data,\n                                  -1,\n                                  G_KEY_FILE_NONE, &error) == FALSE) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to load keyfile: %s"",\n               error->message);\n', '    if (error) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to parse filename: %s"",\n               error->message);\n', '    if (error) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to parse filesize: %s"",\n               error->message);\n']","STRUCT1 *Var1=NULL ; 
STRUCT2 *Var2=NULL ; 
STRUCT3 *Var3=NULL ; 
if (FUNC1(Var1,
(const STRUCT4 *) Var4->memberVar1,
-1,
Var5,&Var3) ==  Var6){
syslog(Var7,STRING,
Var3->memberVar1); 
if (Var3){
syslog(Var7,STRING,
Var3->memberVar1); 
if (Var3){
syslog(Var7,STRING,
Var3->memberVar1); 
",141,0
before_file-xfers.c,vdagent_parse_start_msg,False,False,33,CWE-,CallExpression,syslog,143,-3,"['    GKeyFile *keyfile = NULL;\n', '    AgentFileXferTask *task = NULL;\n', '    GError *error = NULL;\n', '    if (g_key_file_load_from_data(keyfile,\n                                  (const gchar *)msg->data,\n                                  -1,\n                                  G_KEY_FILE_NONE, &error) == FALSE) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to load keyfile: %s"",\n               error->message);\n', '    if (error) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to parse filename: %s"",\n               error->message);\n', '    if (error) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to parse filesize: %s"",\n               error->message);\n']","STRUCT1 *Var1=NULL ; 
STRUCT2 *Var2=NULL ; 
STRUCT3 *Var3=NULL ; 
if (FUNC1(Var1,
(const STRUCT4 *) Var4->memberVar1,
-1,
Var5,&Var3) ==  Var6){
syslog(Var7,STRING,
Var3->memberVar1); 
if (Var3){
syslog(Var7,STRING,
Var3->memberVar1); 
if (Var3){
syslog(Var7,STRING,
Var3->memberVar1); 
",141,0
before_file-xfers.c,vdagent_parse_start_msg,False,False,34,CWE-,CallExpression,syslog,150,-3,"['    GKeyFile *keyfile = NULL;\n', '    AgentFileXferTask *task = NULL;\n', '    GError *error = NULL;\n', '    if (g_key_file_load_from_data(keyfile,\n                                  (const gchar *)msg->data,\n                                  -1,\n                                  G_KEY_FILE_NONE, &error) == FALSE) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to load keyfile: %s"",\n               error->message);\n', '    if (error) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to parse filename: %s"",\n               error->message);\n', '    if (error) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to parse filesize: %s"",\n               error->message);\n']","STRUCT1 *Var1=NULL ; 
STRUCT2 *Var2=NULL ; 
STRUCT3 *Var3=NULL ; 
if (FUNC1(Var1,
(const STRUCT4 *) Var4->memberVar1,
-1,
Var5,&Var3) ==  Var6){
syslog(Var7,STRING,
Var3->memberVar1); 
if (Var3){
syslog(Var7,STRING,
Var3->memberVar1); 
if (Var3){
syslog(Var7,STRING,
Var3->memberVar1); 
",141,0
before_file-xfers.c,get_free_space_available,False,False,35,CWE-,CallExpression,syslog,176,-3,"['    if (statvfs(path, &stat) != 0) {\n', '        syslog(LOG_WARNING, ""file-xfer: failed to get free space, statvfs error: %s"",\n               strerror(errno));\n']","if (FUNC1(Var1,&Var2) != 0){
syslog(Var3,STRING,
strerror(Var4)); 
",34,0
before_file-xfers.c,get_free_space_available,False,False,36,CWE-,CallExpression,strerror,176,-3,"['    if (statvfs(path, &stat) != 0) {\n', '        syslog(LOG_WARNING, ""file-xfer: failed to get free space, statvfs error: %s"",\n               strerror(errno));\n']","if (FUNC1(Var1,&Var2) != 0){
syslog(Var3,STRING,
strerror(Var4)); 
",34,0
before_file-xfers.c,vdagent_file_xfers_start,False,False,37,CWE-,CallExpression,syslog,195,-3,"['    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '        syslog(LOG_ERR, ""file-xfer: error id %u already exists, ignoring!"",\n               msg->id);\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    if (task->file_size > free_space) {\n', '        udscs_write(xfers->vdagentd,\n                    VDAGENTD_FILE_XFER_STATUS,\n                    msg->id,\n                    VD_AGENT_FILE_XFER_STATUS_NOT_ENOUGH_SPACE,\n                    (uint8_t *)&free_space,\n                    sizeof(free_space));\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '    if (i == 64) {\n', '    if (task->file_fd == -1) {\n', '    if (ftruncate(task->file_fd, task->file_size) < 0) {\n', '    g_hash_table_insert(xfers->xfers, GUINT_TO_POINTER(msg->id), task);\n', '    udscs_write(xfers->vdagentd, VDAGENTD_FILE_XFER_STATUS,\n                msg->id, VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA, NULL, 0);\n', '    udscs_write(xfers->vdagentd, VDAGENTD_FILE_XFER_STATUS,\n                msg->id, VD_AGENT_FILE_XFER_STATUS_ERROR, NULL, 0);\n']","STRUCT1 *Var1)
STRUCT2 *Var2; 
char *Var3=NULL ,*Var4=NULL ,*Var5=NULL ; 
int  Var6; 
uint64_t  Var7; 
if (FUNC1(Var8->memberVar1,FUNC2(Var1->memberVar1))){
syslog(Var9,STRING,
Var1->memberVar1); 
Var2=FUNC3(Var1); 
if (Var2 == NULL ){
if (Var2->memberVar1>Var7){
FUNC4(memberVar1->memberVar2,
Var10,
Var1->memberVar1,
Var11,
(uint8_t *)&Var7,
sizeof (Var7)); 
if (FUNC5(Var3,Var12) == -1){
int  Var13=Var14 != NULL  Var14-Var5 strlen(Var5); 
if (Var6 == 64){
if (Var2->STRUCT3 == -1){
if (FUNC6(Var2->memberVar2,Var2->memberVar1)<0){
FUNC7(memberVar1->memberVar1,FUNC2(Var1->memberVar1),Var2); 
FUNC4(memberVar1->memberVar2,Var10,
Var1->memberVar1,Var15,NULL ,0); 
FUNC4(memberVar1->memberVar2,Var10,
Var1->memberVar1,Var16,NULL ,0); 
",351,0
before_file-xfers.c,vdagent_file_xfers_start,False,False,38,CWE-,CallExpression,syslog,219,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    free_space = get_free_space_available(xfers->save_dir);\n', '    if (task->file_size > free_space) {\n', '        gchar *free_space_str, *file_size_str;\n', '        free_space_str = g_format_size(free_space);\n', '        file_size_str = g_format_size(task->file_size);\n', '        syslog(LOG_ERR, ""file-xfer: not enough free space (%s to copy, %s free)"",\n               file_size_str, free_space_str);\n', '        g_free(free_space_str);\n', '        g_free(file_size_str);\n', '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
uint64_t  Var7; 
if (FUNC2(Var1->memberVar1,FUNC3(Var2->memberVar1))){
Var3=FUNC4(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var7=FUNC5(memberVar1->memberVar3); 
if (Var3->memberVar2>Var7){
STRUCT4 *Var8,*Var9; 
Var8=FUNC6(Var7); 
Var9=FUNC6(Var3->memberVar2); 
syslog(Var10,STRING,
Var9,Var8); 
FUNC7(Var8); 
FUNC7(Var9); 
int  Var11=Var12 != NULL  Var12-Var6 strlen(Var6); 
",252,1
before_file-xfers.c,vdagent_file_xfers_start,False,False,39,CWE-,CallExpression,syslog,238,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    file_path = g_build_filename(xfers->save_dir, task->file_name, NULL);\n', '    if (task->file_size > free_space) {\n', '        g_free(dir);\n', '    dir = g_path_get_dirname(file_path);\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '        syslog(LOG_ERR, ""file-xfer: Failed to create dir %s"", dir);\n', ""        char *extension = strrchr(file_path, '.');\n"", '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '    if (i == 64) {\n', '    if (task->file_fd == -1) {\n', '    if (ftruncate(task->file_fd, task->file_size) < 0) {\n', '    g_free(dir);\n', '    g_free(dir);\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
int  Var7; 
uint64_t  Var8; 
if (FUNC2(Var1->memberVar1,FUNC3(Var2->memberVar1))){
Var3=FUNC4(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var6=FUNC5(memberVar1->memberVar3,Var3->memberVar2,NULL ); 
if (Var3->memberVar3>Var8){
FUNC6(Var4); 
Var4=FUNC7(Var6); 
if (FUNC8(Var4,Var9) == -1){
syslog(Var10,STRING,Var4); 
char *Var11=strrchr(Var6,.); 
int  Var12=Var11 != NULL  Var11-Var6 strlen(Var6); 
if (Var7 == 64){
if (Var3->STRUCT4 == -1){
if (FUNC9(Var3->memberVar4,Var3->memberVar3)<0){
FUNC6(Var4); 
FUNC6(Var4); 
",330,0
before_file-xfers.c,vdagent_file_xfers_start,False,False,40,CWE-,CallExpression,strrchr,245,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    file_path = g_build_filename(xfers->save_dir, task->file_name, NULL);\n', '    if (task->file_size > free_space) {\n', '        g_free(file_path);\n', '    dir = g_path_get_dirname(file_path);\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '    path = g_strdup(file_path);\n', '    for (i = 0; i < 64 && (stat(path, &st) == 0 || errno != ENOENT); i++) {\n', '        g_free(path);\n', ""        char *extension = strrchr(file_path, '.');\n"", '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '        path = g_strdup_printf(""%.*s (%i)%s"", basename_len, file_path,\n                               i + 1, extension ? extension : """");\n', '    task->file_name = path;\n', '    if (i == 64) {\n', '        syslog(LOG_ERR, ""file-xfer: more than 63 copies of %s exist?"",\n               file_path);\n', '    task->file_fd = open(path, O_CREAT | O_WRONLY, 0644);\n', '    if (task->file_fd == -1) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to create file %s: %s"",\n               path, strerror(errno));\n', '    if (ftruncate(task->file_fd, task->file_size) < 0) {\n', '    g_free(file_path);\n', '    g_free(file_path);\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
int  Var7; 
uint64_t  Var8; 
if (FUNC2(Var1->memberVar1,FUNC3(Var2->memberVar1))){
Var3=FUNC4(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var6=FUNC5(memberVar1->memberVar3,Var3->memberVar2,NULL ); 
if (Var3->memberVar3>Var8){
FUNC6(Var6); 
Var4=FUNC7(Var6); 
if (FUNC8(Var4,Var9) == -1){
Var5=FUNC9(Var6); 
for (Var7=0; Var7<64&&(FUNC10(Var5,&Var10) == 0||Var11 !=  Var12); Var7  Var13){
FUNC6(Var5); 
char *Var14=strrchr(Var6,.); 
int  Var15=Var14 != NULL  Var14-Var6 strlen(Var6); 
Var5=FUNC11(STRING,Var15,Var6,
Var7+1,Var14  Var14 STRING); 
Var3->memberVar2=Var5; 
if (Var7 == 64){
syslog(Var16,STRING,
Var6); 
Var3->memberVar4=open(Var5,Var17|Var18,0644); 
if (Var3->memberVar4 == -1){
syslog(Var16,STRING,
Var5,strerror(Var11)); 
if (FUNC12(Var3->memberVar4,Var3->memberVar3)<0){
FUNC6(Var6); 
FUNC6(Var6); 
",480,0
before_file-xfers.c,vdagent_file_xfers_start,False,False,41,CWE-,CallExpression,strlen,246,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    g_return_if_fail(xfers != NULL);\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    file_path = g_build_filename(xfers->save_dir, task->file_name, NULL);\n', '    if (task->file_size > free_space) {\n', '        g_free(file_path);\n', '    dir = g_path_get_dirname(file_path);\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '    path = g_strdup(file_path);\n', '    for (i = 0; i < 64 && (stat(path, &st) == 0 || errno != ENOENT); i++) {\n', '        g_free(path);\n', ""        char *extension = strrchr(file_path, '.');\n"", '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '        path = g_strdup_printf(""%.*s (%i)%s"", basename_len, file_path,\n                               i + 1, extension ? extension : """");\n', '    task->file_name = path;\n', '    if (i == 64) {\n', '        syslog(LOG_ERR, ""file-xfer: more than 63 copies of %s exist?"",\n               file_path);\n', '    task->file_fd = open(path, O_CREAT | O_WRONLY, 0644);\n', '    if (task->file_fd == -1) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to create file %s: %s"",\n               path, strerror(errno));\n', '    if (ftruncate(task->file_fd, task->file_size) < 0) {\n', '    udscs_write(xfers->vdagentd, VDAGENTD_FILE_XFER_STATUS,\n                msg->id, VD_AGENT_FILE_XFER_STATUS_CAN_SEND_DATA, NULL, 0);\n', '    g_free(file_path);\n', '    udscs_write(xfers->vdagentd, VDAGENTD_FILE_XFER_STATUS,\n                msg->id, VD_AGENT_FILE_XFER_STATUS_ERROR, NULL, 0);\n', '    g_free(file_path);\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
int  Var7; 
uint64_t  Var8; 
FUNC2(Var1 != NULL ); 
if (FUNC3(Var1->memberVar1,FUNC4(Var2->memberVar1))){
Var3=FUNC5(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var6=FUNC6(memberVar1->memberVar3,Var3->memberVar2,NULL ); 
if (Var3->memberVar3>Var8){
FUNC7(Var6); 
Var4=FUNC8(Var6); 
if (FUNC9(Var4,Var9) == -1){
Var5=FUNC10(Var6); 
for (Var7=0; Var7<64&&(FUNC11(Var5,&Var10) == 0||Var11 !=  Var12); Var7  Var13){
FUNC7(Var5); 
char *Var14=strrchr(Var6,.); 
int  Var15=Var14 != NULL  Var14-Var6 strlen(Var6); 
Var5=FUNC12(STRING,Var15,Var6,
Var7+1,Var14  Var14 STRING); 
Var3->memberVar2=Var5; 
if (Var7 == 64){
syslog(Var16,STRING,
Var6); 
Var3->memberVar4=open(Var5,Var17|Var18,0644); 
if (Var3->memberVar4 == -1){
syslog(Var16,STRING,
Var5,strerror(Var11)); 
if (FUNC13(Var3->memberVar4,Var3->memberVar3)<0){
FUNC14(memberVar1->memberVar4,Var19,
Var2->memberVar1,Var20,NULL ,0); 
FUNC7(Var6); 
FUNC14(memberVar1->memberVar4,Var19,
Var2->memberVar1,Var21,NULL ,0); 
FUNC7(Var6); 
",551,0
before_file-xfers.c,vdagent_file_xfers_start,False,False,42,CWE-,CallExpression,syslog,253,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    file_path = g_build_filename(xfers->save_dir, task->file_name, NULL);\n', '    if (task->file_size > free_space) {\n', '        g_free(file_path);\n', '    dir = g_path_get_dirname(file_path);\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '    path = g_strdup(file_path);\n', '    for (i = 0; i < 64 && (stat(path, &st) == 0 || errno != ENOENT); i++) {\n', ""        char *extension = strrchr(file_path, '.');\n"", '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '        path = g_strdup_printf(""%.*s (%i)%s"", basename_len, file_path,\n                               i + 1, extension ? extension : """");\n', '    if (i == 64) {\n', '        syslog(LOG_ERR, ""file-xfer: more than 63 copies of %s exist?"",\n               file_path);\n', '    if (task->file_fd == -1) {\n', '    if (ftruncate(task->file_fd, task->file_size) < 0) {\n', '    g_free(file_path);\n', '    g_free(file_path);\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
int  Var7; 
uint64_t  Var8; 
if (FUNC2(Var1->memberVar1,FUNC3(Var2->memberVar1))){
Var3=FUNC4(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var6=FUNC5(memberVar1->memberVar3,Var3->memberVar2,NULL ); 
if (Var3->memberVar3>Var8){
FUNC6(Var6); 
Var4=FUNC7(Var6); 
if (FUNC8(Var4,Var9) == -1){
Var5=FUNC9(Var6); 
for (Var7=0; Var7<64&&(FUNC10(Var5,&Var10) == 0||Var11 !=  Var12); Var7  Var13){
char *Var14=strrchr(Var6,.); 
int  Var15=Var14 != NULL  Var14-Var6 strlen(Var6); 
Var5=FUNC11(STRING,Var15,Var6,
Var7+1,Var14  Var14 STRING); 
if (Var7 == 64){
syslog(Var16,STRING,
Var6); 
if (Var3->STRUCT4 == -1){
if (FUNC12(Var3->memberVar4,Var3->memberVar3)<0){
FUNC6(Var6); 
FUNC6(Var6); 
",421,0
before_file-xfers.c,vdagent_file_xfers_start,False,False,43,CWE-,CallExpression,open,258,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    file_path = g_build_filename(xfers->save_dir, task->file_name, NULL);\n', '    if (task->file_size > free_space) {\n', '        gchar *free_space_str, *file_size_str;\n', '        file_size_str = g_format_size(task->file_size);\n', '        vdagent_file_xfer_task_free(task);\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '    path = g_strdup(file_path);\n', '    for (i = 0; i < 64 && (stat(path, &st) == 0 || errno != ENOENT); i++) {\n', '        g_free(path);\n', ""        char *extension = strrchr(file_path, '.');\n"", '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '        path = g_strdup_printf(""%.*s (%i)%s"", basename_len, file_path,\n                               i + 1, extension ? extension : """");\n', '    g_free(task->file_name);\n', '    task->file_name = path;\n', '    if (i == 64) {\n', '    task->file_fd = open(path, O_CREAT | O_WRONLY, 0644);\n', '    if (task->file_fd == -1) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to create file %s: %s"",\n               path, strerror(errno));\n', '    if (ftruncate(task->file_fd, task->file_size) < 0) {\n', '    g_hash_table_insert(xfers->xfers, GUINT_TO_POINTER(msg->id), task);\n', '    if (task)\n', '        vdagent_file_xfer_task_free(task);\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
int  Var7; 
uint64_t  Var8; 
if (FUNC2(Var1->memberVar1,FUNC3(Var2->memberVar1))){
Var3=FUNC4(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var6=FUNC5(memberVar1->memberVar3,Var3->memberVar2,NULL ); 
if (Var3->memberVar3>Var8){
STRUCT4 *Var9,*Var10; 
Var10=FUNC6(Var3->memberVar3); 
FUNC7(Var3); 
if (FUNC8(Var4,Var11) == -1){
Var5=FUNC9(Var6); 
for (Var7=0; Var7<64&&(FUNC10(Var5,&Var12) == 0||Var13 !=  Var14); Var7  Var15){
FUNC11(Var5); 
char *Var16=strrchr(Var6,.); 
int  Var17=Var16 != NULL  Var16-Var6 strlen(Var6); 
Var5=FUNC12(STRING,Var17,Var6,
Var7+1,Var16  Var16 STRING); 
FUNC11(Var3->memberVar2); 
Var3->memberVar2=Var5; 
if (Var7 == 64){
Var3->memberVar4=open(Var5,Var18|Var19,0644); 
if (Var3->memberVar4 == -1){
syslog(Var20,STRING,
Var5,strerror(Var13)); 
if (FUNC13(Var3->memberVar4,Var3->memberVar3)<0){
FUNC14(memberVar1->memberVar1,FUNC3(Var2->memberVar1),Var3); 
if (Var3)
FUNC7(Var3); 
",516,0
before_file-xfers.c,vdagent_file_xfers_start,False,False,44,CWE-,CallExpression,syslog,260,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    file_path = g_build_filename(xfers->save_dir, task->file_name, NULL);\n', '    if (task->file_size > free_space) {\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '    path = g_strdup(file_path);\n', '    for (i = 0; i < 64 && (stat(path, &st) == 0 || errno != ENOENT); i++) {\n', '        g_free(path);\n', ""        char *extension = strrchr(file_path, '.');\n"", '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '        path = g_strdup_printf(""%.*s (%i)%s"", basename_len, file_path,\n                               i + 1, extension ? extension : """");\n', '    task->file_name = path;\n', '    if (i == 64) {\n', '    task->file_fd = open(path, O_CREAT | O_WRONLY, 0644);\n', '    if (task->file_fd == -1) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to create file %s: %s"",\n               path, strerror(errno));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
int  Var7; 
uint64_t  Var8; 
if (FUNC2(Var1->memberVar1,FUNC3(Var2->memberVar1))){
Var3=FUNC4(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var6=FUNC5(memberVar1->memberVar3,Var3->memberVar2,NULL ); 
if (Var3->memberVar3>Var8){
if (FUNC6(Var4,Var9) == -1){
Var5=FUNC7(Var6); 
for (Var7=0; Var7<64&&(FUNC8(Var5,&Var10) == 0||Var11 !=  Var12); Var7  Var13){
FUNC9(Var5); 
char *Var14=strrchr(Var6,.); 
int  Var15=Var14 != NULL  Var14-Var6 strlen(Var6); 
Var5=FUNC10(STRING,Var15,Var6,
Var7+1,Var14  Var14 STRING); 
Var3->memberVar2=Var5; 
if (Var7 == 64){
Var3->memberVar4=open(Var5,Var16|Var17,0644); 
if (Var3->memberVar4 == -1){
syslog(Var18,STRING,
Var5,strerror(Var11)); 
",409,0
before_file-xfers.c,vdagent_file_xfers_start,False,False,45,CWE-,CallExpression,strerror,260,-3,"['void vdagent_file_xfers_start(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStartMessage *msg)\n', '    VDAgentFileXferStartMessage *msg)\n', '    AgentFileXferTask *task;\n', '    char *dir = NULL, *path = NULL, *file_path = NULL;\n', '    int i;\n', '    uint64_t free_space;\n', '    if (g_hash_table_lookup(xfers->xfers, GUINT_TO_POINTER(msg->id))) {\n', '    task = vdagent_parse_start_msg(msg);\n', '    if (task == NULL) {\n', '    task->debug = xfers->debug;\n', '    file_path = g_build_filename(xfers->save_dir, task->file_name, NULL);\n', '    if (task->file_size > free_space) {\n', '    if (g_mkdir_with_parents(dir, S_IRWXU) == -1) {\n', '    path = g_strdup(file_path);\n', '    for (i = 0; i < 64 && (stat(path, &st) == 0 || errno != ENOENT); i++) {\n', '        g_free(path);\n', ""        char *extension = strrchr(file_path, '.');\n"", '        int basename_len = extension != NULL ? extension - file_path : strlen(file_path);\n', '        path = g_strdup_printf(""%.*s (%i)%s"", basename_len, file_path,\n                               i + 1, extension ? extension : """");\n', '    task->file_name = path;\n', '    if (i == 64) {\n', '    task->file_fd = open(path, O_CREAT | O_WRONLY, 0644);\n', '    if (task->file_fd == -1) {\n', '        syslog(LOG_ERR, ""file-xfer: failed to create file %s: %s"",\n               path, strerror(errno));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
char *Var4=NULL ,*Var5=NULL ,*Var6=NULL ; 
int  Var7; 
uint64_t  Var8; 
if (FUNC2(Var1->memberVar1,FUNC3(Var2->memberVar1))){
Var3=FUNC4(Var2); 
if (Var3 == NULL ){
Var3->memberVar1=memberVar1->memberVar2; 
Var6=FUNC5(memberVar1->memberVar3,Var3->memberVar2,NULL ); 
if (Var3->memberVar3>Var8){
if (FUNC6(Var4,Var9) == -1){
Var5=FUNC7(Var6); 
for (Var7=0; Var7<64&&(FUNC8(Var5,&Var10) == 0||Var11 !=  Var12); Var7  Var13){
FUNC9(Var5); 
char *Var14=strrchr(Var6,.); 
int  Var15=Var14 != NULL  Var14-Var6 strlen(Var6); 
Var5=FUNC10(STRING,Var15,Var6,
Var7+1,Var14  Var14 STRING); 
Var3->memberVar2=Var5; 
if (Var7 == 64){
Var3->memberVar4=open(Var5,Var16|Var17,0644); 
if (Var3->memberVar4 == -1){
syslog(Var18,STRING,
Var5,strerror(Var11)); 
",409,0
before_file-xfers.c,vdagent_file_xfers_status,False,False,46,CWE-,CallExpression,syslog,305,-3,"['void vdagent_file_xfers_status(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferStatusMessage *msg)\n', '    VDAgentFileXferStatusMessage *msg)\n', '    AgentFileXferTask *task;\n', '    task = vdagent_file_xfers_get_task(xfers, msg->id);\n', '    if (!task)\n', '    switch (msg->result) {\n', '        syslog(LOG_ERR, ""file-xfer: task %u %s received unexpected 0 response"",\n               task->id, task->file_name);\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
Var3=FUNC2(Var1,Var2->memberVar1); 
if (!Var3)
switch (Var2->memberVar2){
syslog(Var4,STRING,
Var3->memberVar1,Var3->memberVar2); 
",96,1
before_file-xfers.c,vdagent_file_xfers_data,False,False,47,CWE-,CallExpression,write,326,-3,"['void vdagent_file_xfers_data(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferDataMessage *msg)\n', '    VDAgentFileXferDataMessage *msg)\n', '    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    task = vdagent_file_xfers_get_task(xfers, msg->id);\n', '    if (!task)\n', '    len = write(task->file_fd, msg->data, msg->size);\n', '    if (len == msg->size) {\n', '        task->read_bytes += msg->size;\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', '                if (xfers->debug)\n', '                    syslog(LOG_DEBUG, ""file-xfer: task %u %s has completed"",\n                           task->id, task->file_name);\n', '                close(task->file_fd);\n', '                task->file_fd = -1;\n', 'else\n', '        syslog(LOG_ERR, ""file-xfer: error writing %s: %s"", task->file_name,\n               strerror(errno));\n', '    if (status != -1) {\n', '        udscs_write(xfers->vdagentd, VDAGENTD_FILE_XFER_STATUS,\n                    msg->id, status, NULL, 0);\n', '        g_hash_table_remove(xfers->xfers, GUINT_TO_POINTER(msg->id));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
int  Var4,Var5=-1; 
Var3=FUNC2(Var1,Var2->memberVar1); 
if (!Var3)
Var4=write(Var3->memberVar1,Var2->memberVar2,Var2->size ); 
if (Var4 ==  Var2->size ){
Var3->memberVar2  STRUCT4  Var2->size ; 
if (Var3->memberVar2 >=  Var3->memberVar3){
if (Var3->memberVar2 ==  Var3->memberVar3){
if (Var1->memberVar1)
syslog(Var6,STRING,
Var3->memberVar4,Var3->memberVar5); 
close(Var3->memberVar1); 
Var3->memberVar1=-1; 
else 
syslog(Var7,STRING,Var3->memberVar5,
strerror(Var8)); 
if (Var5 != -1){
FUNC3(Var1->memberVar2,Var9,
Var2->memberVar1,Var5,NULL ,0); 
FUNC4(Var1->memberVar3,FUNC5(Var2->memberVar1)); 
",309,0
before_file-xfers.c,vdagent_file_xfers_data,False,False,48,CWE-,CallExpression,syslog,332,-3,"['void vdagent_file_xfers_data(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferDataMessage *msg)\n', '    VDAgentFileXferDataMessage *msg)\n', '    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    task = vdagent_file_xfers_get_task(xfers, msg->id);\n', '    if (!task)\n', '    len = write(task->file_fd, msg->data, msg->size);\n', '    if (len == msg->size) {\n', '        task->read_bytes += msg->size;\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', '                if (xfers->debug)\n', '                    syslog(LOG_DEBUG, ""file-xfer: task %u %s has completed"",\n                           task->id, task->file_name);\n', '                close(task->file_fd);\n', '                task->file_fd = -1;\n', 'else\n', '        syslog(LOG_ERR, ""file-xfer: error writing %s: %s"", task->file_name,\n               strerror(errno));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
int  Var4,Var5=-1; 
Var3=FUNC2(Var1,Var2->memberVar1); 
if (!Var3)
Var4=write(Var3->memberVar1,Var2->memberVar2,Var2->size ); 
if (Var4 ==  Var2->size ){
Var3->memberVar2  STRUCT4  Var2->size ; 
if (Var3->memberVar2 >=  Var3->memberVar3){
if (Var3->memberVar2 ==  Var3->memberVar3){
if (Var1->memberVar1)
syslog(Var6,STRING,
Var3->memberVar4,Var3->memberVar5); 
close(Var3->memberVar1); 
Var3->memberVar1=-1; 
else 
syslog(Var7,STRING,Var3->memberVar5,
strerror(Var8)); 
",246,0
before_file-xfers.c,vdagent_file_xfers_data,False,False,49,CWE-,CallExpression,close,334,-3,"['void vdagent_file_xfers_data(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferDataMessage *msg)\n', '    VDAgentFileXferDataMessage *msg)\n', '    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    task = vdagent_file_xfers_get_task(xfers, msg->id);\n', '    if (!task)\n', '    len = write(task->file_fd, msg->data, msg->size);\n', '    if (len == msg->size) {\n', '        task->read_bytes += msg->size;\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', '                if (xfers->debug)\n', '                    syslog(LOG_DEBUG, ""file-xfer: task %u %s has completed"",\n                           task->id, task->file_name);\n', '                close(task->file_fd);\n', '                task->file_fd = -1;\n', 'else\n', '        syslog(LOG_ERR, ""file-xfer: error writing %s: %s"", task->file_name,\n               strerror(errno));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
int  Var4,Var5=-1; 
Var3=FUNC2(Var1,Var2->memberVar1); 
if (!Var3)
Var4=write(Var3->memberVar1,Var2->memberVar2,Var2->size ); 
if (Var4 ==  Var2->size ){
Var3->memberVar2  STRUCT4  Var2->size ; 
if (Var3->memberVar2 >=  Var3->memberVar3){
if (Var3->memberVar2 ==  Var3->memberVar3){
if (Var1->memberVar1)
syslog(Var6,STRING,
Var3->memberVar4,Var3->memberVar5); 
close(Var3->memberVar1); 
Var3->memberVar1=-1; 
else 
syslog(Var7,STRING,Var3->memberVar5,
strerror(Var8)); 
",246,0
before_file-xfers.c,vdagent_file_xfers_data,False,False,50,CWE-,CallExpression,snprintf,340,-3,"['void vdagent_file_xfers_data(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferDataMessage *msg)\n', '    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    g_return_if_fail(xfers != NULL);\n', '    task = vdagent_file_xfers_get_task(xfers, msg->id);\n', '    if (!task)\n', '    if (len == msg->size) {\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', '                if (xfers->open_save_dir &&\n                        task->file_xfer_nr == task->file_xfer_total &&\n                        g_hash_table_size(xfers->xfers) == 1) {\n', '                    char buf[PATH_MAX];\n', '                    snprintf(buf, PATH_MAX, ""xdg-open \'%s\'&"", xfers->save_dir);\n', '                    status = system(buf);\n', '    if (status != -1) {\n', '        udscs_write(xfers->vdagentd, VDAGENTD_FILE_XFER_STATUS,\n                    msg->id, status, NULL, 0);\n', '        g_hash_table_remove(xfers->xfers, GUINT_TO_POINTER(msg->id));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT3 *Var3; 
int  Var4,Var5=-1; 
FUNC2(Var1 != NULL ); 
Var3=FUNC3(Var1,Var2->memberVar1); 
if (!Var3)
if (Var4 ==  Var2->size ){
if (Var3->memberVar1 >=  Var3->memberVar2){
if (Var3->memberVar1 ==  Var3->memberVar2){
if (Var1->memberVar1&&
Var3->memberVar3 ==  Var3->memberVar4&&
FUNC4(Var1->memberVar2) == 1){
char  Var6[Var7]; 
snprintf(Var6,Var7,STRING,memberVar2->memberVar3); 
Var5=system(Var6); 
if (Var5 != -1){
FUNC5(memberVar2->memberVar4,Var8,
Var2->memberVar1,Var5,NULL ,0); 
FUNC6(memberVar2->memberVar2,FUNC7(Var2->memberVar1)); 
",277,0
before_file-xfers.c,vdagent_file_xfers_data,False,False,51,CWE-,CallExpression,system,341,-3,"['    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    if (!task)\n', '    if (len == msg->size) {\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', '                if (xfers->open_save_dir &&\n                        task->file_xfer_nr == task->file_xfer_total &&\n                        g_hash_table_size(xfers->xfers) == 1) {\n', '                    char buf[PATH_MAX];\n', '                    snprintf(buf, PATH_MAX, ""xdg-open \'%s\'&"", xfers->save_dir);\n', '                    status = system(buf);\n']","STRUCT1 *Var1; 
int  Var2,Var3=-1; 
if (!Var1)
if (Var2 ==  Var4->size ){
if (Var1->memberVar1 >=  Var1->memberVar2){
if (Var1->memberVar1 ==  Var1->memberVar2){
if (Var5->memberVar1&&
Var1->memberVar3 ==  Var1->memberVar4&&
FUNC1(Var5->memberVar2) == 1){
char  Var6[Var7]; 
snprintf(Var6,Var7,STRING,memberVar2->memberVar3); 
Var3=system(Var6); 
",161,0
before_file-xfers.c,vdagent_file_xfers_data,False,False,52,CWE-,CallExpression,syslog,345,-3,"['    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    if (!task)\n', '    if (len == msg->size) {\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', 'else\n', '                syslog(LOG_ERR, ""file-xfer: error received too much data"");\n']","STRUCT1 *Var1; 
int  Var2,Var3=-1; 
if (!Var1)
if (Var2 ==  Var4->size ){
if (Var1->memberVar1 >=  Var1->memberVar2){
if (Var1->memberVar1 ==  Var1->memberVar2){
else 
syslog(Var5,STRING); 
",92,0
before_file-xfers.c,vdagent_file_xfers_data,False,False,53,CWE-,CallExpression,syslog,350,-3,"['void vdagent_file_xfers_data(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferDataMessage *msg)\n', '    VDAgentFileXferDataMessage *msg)\n', '    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    task = vdagent_file_xfers_get_task(xfers, msg->id);\n', '    if (!task)\n', '    len = write(task->file_fd, msg->data, msg->size);\n', '    if (len == msg->size) {\n', '        task->read_bytes += msg->size;\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', '                if (xfers->debug)\n', '                    syslog(LOG_DEBUG, ""file-xfer: task %u %s has completed"",\n                           task->id, task->file_name);\n', '                close(task->file_fd);\n', '                task->file_fd = -1;\n', 'else\n', '        syslog(LOG_ERR, ""file-xfer: error writing %s: %s"", task->file_name,\n               strerror(errno));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
int  Var4,Var5=-1; 
Var3=FUNC2(Var1,Var2->memberVar1); 
if (!Var3)
Var4=write(Var3->memberVar1,Var2->memberVar2,Var2->size ); 
if (Var4 ==  Var2->size ){
Var3->memberVar2  STRUCT4  Var2->size ; 
if (Var3->memberVar2 >=  Var3->memberVar3){
if (Var3->memberVar2 ==  Var3->memberVar3){
if (Var1->memberVar1)
syslog(Var6,STRING,
Var3->memberVar4,Var3->memberVar5); 
close(Var3->memberVar1); 
Var3->memberVar1=-1; 
else 
syslog(Var7,STRING,Var3->memberVar5,
strerror(Var8)); 
",246,0
before_file-xfers.c,vdagent_file_xfers_data,False,False,54,CWE-,CallExpression,strerror,350,-3,"['void vdagent_file_xfers_data(struct vdagent_file_xfers *xfers,\n    VDAgentFileXferDataMessage *msg)\n', '    VDAgentFileXferDataMessage *msg)\n', '    AgentFileXferTask *task;\n', '    int len, status = -1;\n', '    task = vdagent_file_xfers_get_task(xfers, msg->id);\n', '    if (!task)\n', '    len = write(task->file_fd, msg->data, msg->size);\n', '    if (len == msg->size) {\n', '        task->read_bytes += msg->size;\n', '        if (task->read_bytes >= task->file_size) {\n', '            if (task->read_bytes == task->file_size) {\n', '                if (xfers->debug)\n', '                    syslog(LOG_DEBUG, ""file-xfer: task %u %s has completed"",\n                           task->id, task->file_name);\n', '                close(task->file_fd);\n', '                task->file_fd = -1;\n', 'else\n', '        syslog(LOG_ERR, ""file-xfer: error writing %s: %s"", task->file_name,\n               strerror(errno));\n']","void FUNC1(struct STRUCT1 *Var1,
STRUCT2 *Var2)
STRUCT2 *Var2)
STRUCT3 *Var3; 
int  Var4,Var5=-1; 
Var3=FUNC2(Var1,Var2->memberVar1); 
if (!Var3)
Var4=write(Var3->memberVar1,Var2->memberVar2,Var2->size ); 
if (Var4 ==  Var2->size ){
Var3->memberVar2  STRUCT4  Var2->size ; 
if (Var3->memberVar2 >=  Var3->memberVar3){
if (Var3->memberVar2 ==  Var3->memberVar3){
if (Var1->memberVar1)
syslog(Var6,STRING,
Var3->memberVar4,Var3->memberVar5); 
close(Var3->memberVar1); 
Var3->memberVar1=-1; 
else 
syslog(Var7,STRING,Var3->memberVar5,
strerror(Var8)); 
",246,0
