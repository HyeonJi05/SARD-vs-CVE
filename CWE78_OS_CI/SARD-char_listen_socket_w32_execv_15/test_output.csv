FileName,Caller,Source,Sink,idx,CWE-ID,category,criterion,line,label,slices,tokenized,token_length,predict
CWE78_OS_Command_Injection__char_listen_socket_w32_execv_15.c,CWE78_OS_Command_Injection__char_listen_socket_w32_execv_15_bad,False,False,0,CWE-78,CallExpression,strlen,79,0,"['    char * data;\n', '    char dataBuffer[100] = COMMAND_ARG2;\n', '    data = dataBuffer;\n', '    switch(6)\n', '        int recvResult;\n', '        char *replace;\n', '        SOCKET listenSocket = INVALID_SOCKET;\n', '        SOCKET acceptSocket = INVALID_SOCKET;\n', '        size_t dataLen = strlen(data);\n', '            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n', '            if (listenSocket == INVALID_SOCKET)\n', '            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n', '            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)\n', '            if (acceptSocket == SOCKET_ERROR)\n', '            recvResult = recv(acceptSocket, (char *)(data + dataLen), sizeof(char) * (100 - dataLen - 1), 0);\n', '            if (recvResult == SOCKET_ERROR || recvResult == 0)\n', ""            data[dataLen + recvResult / sizeof(char)] = '\\0';\n"", ""            replace = strchr(data, '\\r');\n"", ""            replace = strchr(data, '\\n');\n"", '        while (0);\n']","char *Var1; 
char  Var2[100]=Var3; 
Var1=Var2; 
switch (6)
int  Var4; 
char *Var5; 
STRUCT1  Var6=Var7; 
STRUCT1  Var8=Var7; 
size_t  Var9=strlen(Var1); 
if (FUNC1(FUNC2(2,2),&Var10) !=  Var11)
if (Var6 ==  Var7)
if (FUNC3(Var6,(struct STRUCT2 *)&Var12,sizeof (Var12)) ==  Var13)
if (FUNC4(Var6,Var14) ==  Var13)
if (Var8 ==  Var13)
Var4=recv(Var8,(char *)(Var1+Var9),sizeof (char )*(100-Var9-1),0); 
if (Var4 ==  Var13||Var4 == 0)
Var1[Var9+Var4/sizeof (char )]=0; 
Var5=strchr(Var1,Var15); 
Var5=strchr(Var1,Var16); 
while (0); 
",292,0
CWE78_OS_Command_Injection__char_listen_socket_w32_execv_15.c,CWE78_OS_Command_Injection__char_listen_socket_w32_execv_15_bad,False,False,1,CWE-78,CallExpression,socket,90,0,"['    char * data;\n', '    switch(6)\n', '        int recvResult;\n', '        SOCKET listenSocket = INVALID_SOCKET;\n', '        SOCKET acceptSocket = INVALID_SOCKET;\n', '        size_t dataLen = strlen(data);\n', '            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n', '            listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n', '            if (listenSocket == INVALID_SOCKET)\n', '            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n', '            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)\n', '            acceptSocket = accept(listenSocket, NULL, NULL);\n', '            if (acceptSocket == SOCKET_ERROR)\n', '            recvResult = recv(acceptSocket, (char *)(data + dataLen), sizeof(char) * (100 - dataLen - 1), 0);\n', '            if (recvResult == SOCKET_ERROR || recvResult == 0)\n', ""            data[dataLen + recvResult / sizeof(char)] = '\\0';\n"", '        while (0);\n', '        if (listenSocket != INVALID_SOCKET)\n', '            CLOSE_SOCKET(listenSocket);\n', '        if (acceptSocket != INVALID_SOCKET)\n', '            CLOSE_SOCKET(acceptSocket);\n', '        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};\n']","char *Var1; 
switch (6)
int  Var2; 
STRUCT1  Var3=Var4; 
STRUCT1  Var5=Var4; 
size_t  Var6=strlen(Var1); 
if (FUNC1(FUNC2(2,2),&Var7) !=  Var8)
Var3=socket(Var9,Var10,Var11); 
if (Var3 ==  Var4)
if (FUNC3(Var3,(struct STRUCT2 *)&Var12,sizeof (Var12)) ==  Var13)
if (FUNC4(Var3,Var14) ==  Var13)
Var5=FUNC5(Var3,NULL ,NULL ); 
if (Var5 ==  Var13)
Var2=recv(Var5,(char *)(Var1+Var6),sizeof (char )*(100-Var6-1),0); 
if (Var2 ==  Var13||Var2 == 0)
Var1[Var6+Var2/sizeof (char )]=0; 
while (0); 
if (Var3 !=  Var4)
FUNC6(Var3); 
if (Var5 !=  Var4)
FUNC6(Var5); 
char *Var15[]={Var16,Var17,Var18,NULL }; 
",336,0
CWE78_OS_Command_Injection__char_listen_socket_w32_execv_15.c,CWE78_OS_Command_Injection__char_listen_socket_w32_execv_15_bad,False,False,2,CWE-78,CallExpression,memset,95,0,"['    switch(6)\n', '        int recvResult;\n', '        SOCKET listenSocket = INVALID_SOCKET;\n', '        SOCKET acceptSocket = INVALID_SOCKET;\n', '            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n', '            if (listenSocket == INVALID_SOCKET)\n', '            memset(&service, 0, sizeof(service));\n', '            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n', '            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)\n', '            if (acceptSocket == SOCKET_ERROR)\n', '            if (recvResult == SOCKET_ERROR || recvResult == 0)\n', '        while (0);\n']","switch (6)
int  Var1; 
STRUCT1  Var2=Var3; 
STRUCT1  Var4=Var3; 
if (FUNC1(FUNC2(2,2),&Var5) !=  Var6)
if (Var2 ==  Var3)
memset(&Var7,0,sizeof (Var7)); 
if (FUNC3(Var2,(struct STRUCT2 *)&Var7,sizeof (Var7)) ==  Var8)
if (FUNC4(Var2,Var9) ==  Var8)
if (Var4 ==  Var8)
if (Var1 ==  Var8||Var1 == 0)
while (0); 
",177,0
CWE78_OS_Command_Injection__char_listen_socket_w32_execv_15.c,CWE78_OS_Command_Injection__char_listen_socket_w32_execv_15_bad,False,False,3,CWE-78,CallExpression,recv,113,0,"['    char * data;\n', '    char dataBuffer[100] = COMMAND_ARG2;\n', '    data = dataBuffer;\n', '    switch(6)\n', '        int recvResult;\n', '        char *replace;\n', '        SOCKET listenSocket = INVALID_SOCKET;\n', '        SOCKET acceptSocket = INVALID_SOCKET;\n', '        size_t dataLen = strlen(data);\n', '            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n', '            listenSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n', '            if (listenSocket == INVALID_SOCKET)\n', '            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n', '            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)\n', '            acceptSocket = accept(listenSocket, NULL, NULL);\n', '            if (acceptSocket == SOCKET_ERROR)\n', '            recvResult = recv(acceptSocket, (char *)(data + dataLen), sizeof(char) * (100 - dataLen - 1), 0);\n', '            if (recvResult == SOCKET_ERROR || recvResult == 0)\n', ""            data[dataLen + recvResult / sizeof(char)] = '\\0';\n"", ""            replace = strchr(data, '\\r');\n"", ""            replace = strchr(data, '\\n');\n"", '        while (0);\n', '        if (acceptSocket != INVALID_SOCKET)\n', '            CLOSE_SOCKET(acceptSocket);\n', '        char *args[] = {COMMAND_INT_PATH, COMMAND_ARG1, COMMAND_ARG3, NULL};\n']","char *Var1; 
char  Var2[100]=Var3; 
Var1=Var2; 
switch (6)
int  Var4; 
char *Var5; 
STRUCT1  Var6=Var7; 
STRUCT1  Var8=Var7; 
size_t  Var9=strlen(Var1); 
if (FUNC1(FUNC2(2,2),&Var10) !=  Var11)
Var6=socket(Var12,Var13,Var14); 
if (Var6 ==  Var7)
if (FUNC3(Var6,(struct STRUCT2 *)&Var15,sizeof (Var15)) ==  Var16)
if (FUNC4(Var6,Var17) ==  Var16)
Var8=FUNC5(Var6,NULL ,NULL ); 
if (Var8 ==  Var16)
Var4=recv(Var8,(char *)(Var1+Var9),sizeof (char )*(100-Var9-1),0); 
if (Var4 ==  Var16||Var4 == 0)
Var1[Var9+Var4/sizeof (char )]=0; 
Var5=strchr(Var1,Var18); 
Var5=strchr(Var1,Var19); 
while (0); 
if (Var8 !=  Var7)
FUNC6(Var8); 
char *Var20[]={Var21,Var22,Var23,NULL }; 
",368,0
CWE78_OS_Command_Injection__char_listen_socket_w32_execv_15.c,CWE78_OS_Command_Injection__char_listen_socket_w32_execv_15_bad,False,False,4,CWE-78,CallExpression,strchr,121,0,"['    char * data;\n', '    char dataBuffer[100] = COMMAND_ARG2;\n', '    data = dataBuffer;\n', '    switch(6)\n', '        int recvResult;\n', '        char *replace;\n', '        SOCKET listenSocket = INVALID_SOCKET;\n', '        SOCKET acceptSocket = INVALID_SOCKET;\n', '        size_t dataLen = strlen(data);\n', '            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n', '            if (listenSocket == INVALID_SOCKET)\n', '            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n', '            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)\n', '            if (acceptSocket == SOCKET_ERROR)\n', '            recvResult = recv(acceptSocket, (char *)(data + dataLen), sizeof(char) * (100 - dataLen - 1), 0);\n', '            if (recvResult == SOCKET_ERROR || recvResult == 0)\n', ""            data[dataLen + recvResult / sizeof(char)] = '\\0';\n"", ""            replace = strchr(data, '\\r');\n"", '            if (replace)\n', ""                *replace = '\\0';\n"", ""            replace = strchr(data, '\\n');\n"", '            if (replace)\n', ""                *replace = '\\0';\n"", '        while (0);\n']","char *Var1; 
char  Var2[100]=Var3; 
Var1=Var2; 
switch (6)
int  Var4; 
char *Var5; 
STRUCT1  Var6=Var7; 
STRUCT1  Var8=Var7; 
size_t  Var9=strlen(Var1); 
if (FUNC1(FUNC2(2,2),&Var10) !=  Var11)
if (Var6 ==  Var7)
if (FUNC3(Var6,(struct STRUCT2 *)&Var12,sizeof (Var12)) ==  Var13)
if (FUNC4(Var6,Var14) ==  Var13)
if (Var8 ==  Var13)
Var4=recv(Var8,(char *)(Var1+Var9),sizeof (char )*(100-Var9-1),0); 
if (Var4 ==  Var13||Var4 == 0)
Var1[Var9+Var4/sizeof (char )]=0; 
Var5=strchr(Var1,Var15); 
if (Var5)
*Var5=0; 
Var5=strchr(Var1,Var16); 
if (Var5)
*Var5=0; 
while (0); 
",320,0
CWE78_OS_Command_Injection__char_listen_socket_w32_execv_15.c,CWE78_OS_Command_Injection__char_listen_socket_w32_execv_15_bad,False,False,5,CWE-78,CallExpression,strchr,126,0,"['    char * data;\n', '    char dataBuffer[100] = COMMAND_ARG2;\n', '    data = dataBuffer;\n', '    switch(6)\n', '        int recvResult;\n', '        char *replace;\n', '        SOCKET listenSocket = INVALID_SOCKET;\n', '        SOCKET acceptSocket = INVALID_SOCKET;\n', '        size_t dataLen = strlen(data);\n', '            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n', '            if (listenSocket == INVALID_SOCKET)\n', '            if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n', '            if (listen(listenSocket, LISTEN_BACKLOG) == SOCKET_ERROR)\n', '            if (acceptSocket == SOCKET_ERROR)\n', '            recvResult = recv(acceptSocket, (char *)(data + dataLen), sizeof(char) * (100 - dataLen - 1), 0);\n', '            if (recvResult == SOCKET_ERROR || recvResult == 0)\n', ""            data[dataLen + recvResult / sizeof(char)] = '\\0';\n"", ""            replace = strchr(data, '\\r');\n"", '            if (replace)\n', ""                *replace = '\\0';\n"", ""            replace = strchr(data, '\\n');\n"", '            if (replace)\n', ""                *replace = '\\0';\n"", '        while (0);\n']","char *Var1; 
char  Var2[100]=Var3; 
Var1=Var2; 
switch (6)
int  Var4; 
char *Var5; 
STRUCT1  Var6=Var7; 
STRUCT1  Var8=Var7; 
size_t  Var9=strlen(Var1); 
if (FUNC1(FUNC2(2,2),&Var10) !=  Var11)
if (Var6 ==  Var7)
if (FUNC3(Var6,(struct STRUCT2 *)&Var12,sizeof (Var12)) ==  Var13)
if (FUNC4(Var6,Var14) ==  Var13)
if (Var8 ==  Var13)
Var4=recv(Var8,(char *)(Var1+Var9),sizeof (char )*(100-Var9-1),0); 
if (Var4 ==  Var13||Var4 == 0)
Var1[Var9+Var4/sizeof (char )]=0; 
Var5=strchr(Var1,Var15); 
if (Var5)
*Var5=0; 
Var5=strchr(Var1,Var16); 
if (Var5)
*Var5=0; 
while (0); 
",320,0
CWE78_OS_Command_Injection__char_listen_socket_w32_execv_15.c,goodG2B1,False,False,6,CWE-78,CallExpression,strcat,180,1,"['    char * data;\n', '    char dataBuffer[100] = COMMAND_ARG2;\n', '    data = dataBuffer;\n', '    switch(5)\n', '        strcat(data, ""*.*"");\n']","char *Var1; 
char  Var2[100]=Var3; 
Var1=Var2; 
switch (5)
strcat(Var1,STRING); 
",40,1
CWE78_OS_Command_Injection__char_listen_socket_w32_execv_15.c,goodG2B2,False,False,7,CWE-78,CallExpression,strcat,201,1,"['    char * data;\n', '    char dataBuffer[100] = COMMAND_ARG2;\n', '    data = dataBuffer;\n', '    switch(6)\n', '        strcat(data, ""*.*"");\n']","char *Var1; 
char  Var2[100]=Var3; 
Var1=Var2; 
switch (6)
strcat(Var1,STRING); 
",40,1
